### Kaiburr Assessment Task 1 - REST API Testing
### Use this file with VS Code REST Client extension to test all endpoints

### 1. Create a new safe task
PUT http://localhost:8080/api/tasks
Content-Type: application/json

{
    "name": "Print Hello",
    "owner": "Mahesh",
    "command": "echo Hello World!"
}

### 2. Create another safe task
PUT http://localhost:8080/api/tasks
Content-Type: application/json

{
    "name": "List Files",
    "owner": "Amrita",
    "command": "dir"
}

### 3. Create an unsafe task (should fail with 400 Bad Request)
PUT http://localhost:8080/api/tasks
Content-Type: application/json

{
    "name": "Unsafe Task",
    "owner": "ECE",
    "command": "rm -rf /"
}

### 4. Get all tasks
GET http://localhost:8080/api/tasks

### 5. Get task by ID (replace with actual ID from create response)
# First, manually copy a task ID from the "Get all tasks" response above
# Then replace YOUR_TASK_ID_HERE with the actual ID
@taskId = YOUR_TASK_ID_HERE
GET http://localhost:8080/api/tasks?id={{taskId}}

### 6. Find tasks by name containing "Hello"
GET http://localhost:8080/api/tasks/find?name=Hello

### 7. Find tasks by name containing "List"
GET http://localhost:8080/api/tasks/find?name=List

### 8. Execute a task (replace with actual ID)
# Replace YOUR_TASK_ID_HERE with an actual task ID
PUT http://localhost:8080/api/tasks/execute/{{taskId}}

### 9. Get the executed task to see execution history
GET http://localhost:8080/api/tasks?id={{taskId}}

### 10. Delete a task (replace with actual ID)
# Replace YOUR_TASK_ID_HERE with an actual task ID
DELETE http://localhost:8080/api/tasks/{{taskId}}

### 11. Try to get deleted task (should return 404)
GET http://localhost:8080/api/tasks?id={{taskId}}

### 12. Find tasks by non-existent name (should return 404)
GET http://localhost:8080/api/tasks/find?name=NonExistentTask

###############################################
# TESTING WORKFLOW (Follow these steps):
###############################################

# Step 1: Start the application
# Run: mvn spring-boot:run (in terminal)

# Step 2: Create tasks using requests #1 and #2

# Step 3: Copy a task ID from the response

# Step 4: Replace @taskId variable value with the copied ID

# Step 5: Test all other endpoints (GET, Execute, Delete)

# Step 6: Take screenshots of successful requests for documentation
